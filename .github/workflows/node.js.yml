name: Build & Test

on: [push, pull_request]

permissions:
  packages: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build_tag:
    if: startsWith(github.event.ref, 'refs/tags/')
    needs: test
  
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5.0.0
        with:
          push: true
          tags: ghcr.io/elanis/discord-server-stats:${{github.ref_name}}
          build-args: |
            NPM_TOKEN=${{secrets.GITHUB_TOKEN}}  
  
  build_branch:
    if: ${{ (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature/')) && github.event_name == 'push' }}
    needs: test
  
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5.0.0
        with:
          push: true
          tags: ghcr.io/elanis/discord-server-stats:${{ github.head_ref || github.ref_name }} 
          build-args: |
            NPM_TOKEN=${{secrets.GITHUB_TOKEN}}  
